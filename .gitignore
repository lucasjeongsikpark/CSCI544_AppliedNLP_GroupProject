# Byte-compiled / optimized / DLL files
ChatEval/__pycache__/
ChatEval/*.py[cod]
ChatEval/*$py.class

# C extensions
ChatEval/*.so

# Distribution / packaging
ChatEval/.Python
ChatEval/build/
ChatEval/develop-eggs/
ChatEval/**/dist/*
ChatEval/!**/dist/assets
ChatEval/!**/dist/index.html
ChatEval/downloads/
ChatEval/eggs/
ChatEval/.eggs/
ChatEval/lib/
ChatEval/lib64/
ChatEval/parts/
ChatEval/sdist/
ChatEval/var/
ChatEval/wheels/
ChatEval/share/python-wheels/
ChatEval/*.egg-info/
ChatEval/.installed.cfg
ChatEval/*.egg
ChatEval/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
ChatEval/*.manifest
ChatEval/*.spec

# Installer logs
ChatEval/pip-log.txt
ChatEval/pip-delete-this-directory.txt

# Unit test / coverage reports
ChatEval/htmlcov/
ChatEval/.tox/
ChatEval/.nox/
ChatEval/.coverage
ChatEval/.coverage.*
ChatEval/.cache
ChatEval/nosetests.xml
ChatEval/coverage.xml
ChatEval/*.cover
ChatEval/*.py,cover
ChatEval/.hypothesis/
ChatEval/.pytest_cache/
ChatEval/cover/

# Translations
ChatEval/*.mo
ChatEval/*.pot

# Django stuff:
ChatEval/*.log
ChatEval/local_settings.py
ChatEval/db.sqlite3
ChatEval/db.sqlite3-journal

# Flask stuff:
ChatEval/instance/
ChatEval/.webassets-cache

# Scrapy stuff:
ChatEval/.scrapy

# Sphinx documentation
ChatEval/docs/_build/

# PyBuilder
ChatEval/.pybuilder/
ChatEval/target/

# Jupyter Notebook
ChatEval/.ipynb_checkpoints

# IPython
ChatEval/profile_default/
ChatEval/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
ChatEval/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
ChatEval/__pypackages__/

# Celery stuff
ChatEval/celerybeat-schedule
ChatEval/celerybeat.pid

# SageMath parsed files
ChatEval/*.sage.py

# Environments
ChatEval/.env
ChatEval/.venv
ChatEval/env/
ChatEval/venv/
ChatEval/ENV/
ChatEval/env.bak/
ChatEval/venv.bak/

# Spyder project settings
ChatEval/.spyderproject
ChatEval/.spyproject

# Rope project settings
ChatEval/.ropeproject

# mkdocs documentation
ChatEval//site

# mypy
ChatEval/.mypy_cache/
ChatEval/.dmypy.json
ChatEval/dmypy.json

# Pyre type checker
ChatEval/.pyre/

# pytype static type analyzer
ChatEval/.pytype/

# Cython debug symbols
ChatEval/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
ChatEval/.idea
ChatEval/.vscode
ChatEval/.DS_Store
ChatEval/figs
ChatEval/frontend

ChatEval/g_push.sh
ChatEval/raw/


# My outputs
ChatEval/outputs
ChatEval/scripts
ChatEval/*.json
ChatEval/!agentverse/tasks/llm_eval/data/faireval/preprocessed_data/test.json


ChatEval/*.jsonl
ChatEval/llm_eval_azure.py


.hf_home/

# Ignore Debatable-Intelligence virtual environment and system artifacts
Debatable-Intelligence/di-venv/

# Remove accidental Windows Zone.Identifier alternate data streams
*:Zone.Identifier
